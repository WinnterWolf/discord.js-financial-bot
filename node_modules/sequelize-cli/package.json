{
  "_from": "sequelize-cli",
  "_id": "sequelize-cli@6.2.0",
  "_inBundle": false,
  "_integrity": "sha512-6WQ2x91hg30dUn66mXHnzvHATZ4pyI1GHSNbS/TNN/vRR4BLRSLijadeMgC8zqmKDsL0VqzVVopJWfJakuP++Q==",
  "_location": "/sequelize-cli",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sequelize-cli",
    "fetchSpec": "latest",
    "name": "sequelize-cli",
    "raw": "sequelize-cli",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize-cli/-/sequelize-cli-6.2.0.tgz",
  "_shasum": "fd02bfeae23b8226872f9947f3f8212cc49a4771",
  "_spec": "sequelize-cli",
  "_where": "D:\\discord\\LMF",
  "bin": {
    "sequelize": "lib/sequelize",
    "sequelize-cli": "lib/sequelize"
  },
  "bugs": {
    "url": "https://github.com/sequelize/cli/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Sascha Depold",
      "email": "sascha@depold.com"
    },
    {
      "name": "Paulo R Lopes",
      "email": "prplopes@gmail.com"
    },
    {
      "name": "Sushant Dhiman",
      "email": "sushantdhiman@outlook.com"
    }
  ],
  "dependencies": {
    "cli-color": "^1.4.0",
    "fs-extra": "^7.0.1",
    "js-beautify": "^1.8.8",
    "lodash": "^4.17.5",
    "resolve": "^1.5.0",
    "umzug": "^2.3.0",
    "yargs": "^13.1.0"
  },
  "deprecated": false,
  "description": "The Sequelize CLI",
  "devDependencies": {
    "@babel/cli": "^7.10.1",
    "@babel/core": "^7.10.2",
    "@babel/preset-env": "^7.10.2",
    "@babel/register": "^7.10.1",
    "bluebird": "^3.7.2",
    "eslint": "^7.2.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "expect.js": "^0.3.1",
    "gulp": "^4.0.0",
    "mocha": "^6.0.0",
    "mysql2": "latest",
    "pg": "latest",
    "pg-hstore": "latest",
    "prettier": "^2.0.5",
    "sequelize": "^6.1.0",
    "sqlite3": "latest",
    "through2": "^3.0.0"
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/sequelize/cli",
  "keywords": [
    "cli",
    "sequelize"
  ],
  "license": "MIT",
  "name": "sequelize-cli",
  "optionalDependencies": {},
  "options": {
    "mocha": "--require scripts/mocha-bootload.js --bail --check-leaks --exit --timeout 30000 --colors --recursive --reporter spec"
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5"
  },
  "readme": "# sequelize/cli [![npm version](https://badge.fury.io/js/sequelize-cli.svg)](https://npmjs.com/package/sequelize-cli) [![Build Status](https://travis-ci.org/sequelize/cli.svg?branch=master)](https://travis-ci.org/sequelize/cli)\n\nThe [Sequelize](https://sequelize.org) Command Line Interface (CLI)\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Contributing](#contributing)\n- [Documentation](#documentation)\n\n## Installation\n\nMake sure you have [Sequelize](https://sequelize.org) installed. Then install the Sequelize CLI to be used in your project with\n\n```bash\nnpm install --save-dev sequelize-cli\n```\n\nAnd then you should be able to run the CLI with\n\n```bash\nnpx sequelize --help\n```\n\n### Usage\n\n```bash\nSequelize CLI [Node: 10.21.0, CLI: 6.0.0, ORM: 6.1.0]\n\nsequelize <command>\n\nCommands:\n  sequelize db:migrate                        Run pending migrations\n  sequelize db:migrate:schema:timestamps:add  Update migration table to have timestamps\n  sequelize db:migrate:status                 List the status of all migrations\n  sequelize db:migrate:undo                   Reverts a migration\n  sequelize db:migrate:undo:all               Revert all migrations ran\n  sequelize db:seed                           Run specified seeder\n  sequelize db:seed:undo                      Deletes data from the database\n  sequelize db:seed:all                       Run every seeder\n  sequelize db:seed:undo:all                  Deletes data from the database\n  sequelize db:create                         Create database specified by configuration\n  sequelize db:drop                           Drop database specified by configuration\n  sequelize init                              Initializes project\n  sequelize init:config                       Initializes configuration\n  sequelize init:migrations                   Initializes migrations\n  sequelize init:models                       Initializes models\n  sequelize init:seeders                      Initializes seeders\n  sequelize migration:generate                Generates a new migration file      [aliases: migration:create]\n  sequelize model:generate                    Generates a model and its migration [aliases: model:create]\n  sequelize seed:generate                     Generates a new seed file           [aliases: seed:create]\n\nOptions:\n  --version  Show version number                                                  [boolean]\n  --help     Show help                                                            [boolean]\n\nPlease specify a command\n```\n\n## Contributing\n\nAll contributions are accepted as a PR.\n\n- You can file issues by submitting a PR (with test) as a test case.\n- Implement new feature by submitting a PR\n- Improve documentation by submitting PR to [Sequelize](https://github.com/sequelize/sequelize)\n\nPlease read the [contributing guidelines](CONTRIBUTING.md).\n\n## Documentation\n\n- [Migrations Documentation](https://sequelize.org/master/manual/migrations.html)\n- [CLI Options](docs/README.md)\n- [Frequently Asked Questions](docs/FAQ.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/sequelize/cli.git"
  },
  "scripts": {
    "build": "npm run build-clean && babel src -d lib && npm run build-bin && npm run build-assets",
    "build-assets": "cp -R ./src/assets ./lib/",
    "build-bin": "mv ./lib/sequelize.js ./lib/sequelize && chmod +x ./lib/sequelize",
    "build-clean": "rm -rf ./lib/",
    "lint": "eslint test src",
    "prepare": "npm run build",
    "pretty": "prettier src test --write",
    "test": "npm run lint && npm run build && npm run test-raw",
    "test-raw": "mocha $npm_package_options_mocha 'test/**/*.test.js'"
  },
  "version": "6.2.0"
}
